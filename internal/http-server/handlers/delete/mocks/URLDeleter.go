// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// URLDeleter is an autogenerated mock type for the URLDeleter type
type URLDeleter struct {
	mock.Mock
}

type URLDeleter_Expecter struct {
	mock *mock.Mock
}

func (_m *URLDeleter) EXPECT() *URLDeleter_Expecter {
	return &URLDeleter_Expecter{mock: &_m.Mock}
}

// DeleteURL provides a mock function with given fields: alias
func (_m *URLDeleter) DeleteURL(alias string) error {
	ret := _m.Called(alias)

	if len(ret) == 0 {
		panic("no return value specified for DeleteURL")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(alias)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// URLDeleter_DeleteURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteURL'
type URLDeleter_DeleteURL_Call struct {
	*mock.Call
}

// DeleteURL is a helper method to define mock.On call
//   - alias string
func (_e *URLDeleter_Expecter) DeleteURL(alias interface{}) *URLDeleter_DeleteURL_Call {
	return &URLDeleter_DeleteURL_Call{Call: _e.mock.On("DeleteURL", alias)}
}

func (_c *URLDeleter_DeleteURL_Call) Run(run func(alias string)) *URLDeleter_DeleteURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *URLDeleter_DeleteURL_Call) Return(_a0 error) *URLDeleter_DeleteURL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *URLDeleter_DeleteURL_Call) RunAndReturn(run func(string) error) *URLDeleter_DeleteURL_Call {
	_c.Call.Return(run)
	return _c
}

// NewURLDeleter creates a new instance of URLDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewURLDeleter(t interface {
	mock.TestingT
	Cleanup(func())
}) *URLDeleter {
	mock := &URLDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
